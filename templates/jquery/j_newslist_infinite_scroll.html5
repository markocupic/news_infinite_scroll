<script>
(function ($) {
    $(document).ready(function () {

        //var ids = <?= $this->ids ?>;

        /**
         * Generate the NewsInfiniteScroll object
         * requires news_infinite_scroll.js
         * @type {NewsInfiniteScroll}
         */
        var newsInfiniteScroll = new NewsInfiniteScroll ({
            // Array with news-ids
            //ids: ids,
            // CSS selector: Append loaded items to this container
            newsContainer: '.mod_newslist_infinite_scroll',
            // CSS selector: Default to $(window)
            scrollContainer: $(window),
            // CSS selector: Pagination links (<a href="infinite?page_n193=5" class="link page-link" title="Gehe zu Seite 5">5</a>)
            paginationLinks:  '.pagination .link.page-link',
            // When set to true, this will disable infinite scrolling and start firing ajax requests on domready with an interval of 3s
            loadAllOnDomready: false,
            // CSS selector: When you scroll and the window has reached the anchor point, requests will start
            anchorPoint: '.mod_newslist_infinite_scroll',
            // Distance in px from the top of the anchorPoint
            bottomPixels: 10,
            // Integer: Fading time for loades news items
            fadeInTime: 800,
            // HTML: Show this message during the loading process
            msgText: '<em>Loading...</em>',



            // Callbacks
            /**
             *
             * @param instance
             * @return bool
             */
            onInitialize: function (instance) {
                //$('.mod_portfoliolist').addClass('row');
                //$('.mod_portfoliolist  > div').addClass('col-md-3');
                $('.mod_newslist_infinite_scroll .mod_pagination').css({
                    'visibility': 'hidden',
                    'position': 'absolute',
                    'left': '-99999px'
                });
                // Return false to abort initialization
                return true;
            },

            /**
             *
             * @param instance
             */
            onXHRStart: function(instance){},

            /**
             *
             * @param html
             * @param instance
             * @returns string
             */
            onXHRComplete: function(html, instance){
                return html;
            },

            /**
             *
             * @param instance
             */
            onXHRFail: function (instance) {
                console.log('Keine Antwort vom Server mit der Adresse: ' + instance.currentUrl);
            },

            /**
             *
             * @param instance
             */
            onAppendCallback: function(instance){}
        });


    });
}(jQuery));


</script>