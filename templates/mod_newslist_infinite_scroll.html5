<?php if(\Environment::get('isAjaxRequest')): ?>
<?php if (!empty($this->articles)): ?>
<?= implode('', $this->articles) ?>
        <?php endif; ?>
        <?php else: ?>
        <?php if ($this->ids != ''): ?>
<script>

(function ($) {
    $(document).ready(function () {

        var ids = <?= $this->ids ?>;

        /**
         * Generate the NewsInfiniteScroll object
         * requires news_infinite_scroll.js
         * @type {NewsInfiniteScroll}
         */
        var newsInfiniteScroll = new NewsInfiniteScroll({
            // Array with news-ids
            ids: ids,
            // CSS selector: Append loaded items to this container
            newsContainer: '.mod_newslist',
            // CSS selector: Default to $(window)
            scrollContainer: $(window),
            // When set to true, this will disable infinite scrolling and start firing ajax requests on domready with an interval of 3s
            loadAllOnDomready: false,
            // Load x items per request
            itemsPerRequest: 8,
            // CSS selector: When you scroll and the window has reached the anchor point, requests will start
            anchorPoint: '.mod_newslist',
            // Distance in px from the top of the anchorPoint
            bottomPixels: 600,
            // Integer: Fading time for loades news items
            fadeInTime: 0,
            // HTML: Show this message during the loading process
            msgText: '<em>Lade weitere Nachrichten. Einen Moment bitte...</em>',


            // Callbacks
            /**
             *
             * @param instance
             */
            onInitialize: function (instance) {
                //
            },

            /**
             *
             * @param instance
             */
            onXHRStart: function (instance) {
                //
            },

            /**
             *
             * @param html
             * @param instance
             * @returns string
             */
            onXHRComplete: function (html, instance) {
                return html;
            },

            /**
             *
             * @param instance
             */
            onXHRFail: function (instance) {
                console.log('Keine Antwort vom Server mit der Adresse: ' + instance.currentUrl);
            },

            /**
             *
             * @param instance
             */
            onAppendCallback: function (instance) {
                //
            }
        });
    });
}(jQuery));


</script>
<?php endif; ?>
<?php endif; ?>